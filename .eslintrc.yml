env:
  browser: true
  es2021: true
  jest/globals: true
extends:
  - 'plugin:react/recommended'
  - 'airbnb'
  - 'airbnb/hooks'
  - 'prettier'
  - 'prettier/babel'
  - 'prettier/flowtype'
  - 'prettier/react'
  - 'eslint:recommended'
  - 'plugin:import/errors'
  - 'plugin:import/warnings'
  - 'plugin:jest/recommended'
  - 'plugin:jest/style'
  - 'plugin:jsx-a11y/recommended'
  - 'plugin:react-hooks/recommended'
parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: 12
  sourceType: module
plugins:
  - 'react'
  - 'react-hooks'
  - 'import'
  - 'eslint-plugin-import-helpers'
  - 'jest'
  - 'jsx-a11y'
rules:
  {
    radix: 'error',
    no-self-compare: 'error',
    implicit-arrow-linebreak: ['error', 'beside'],
    no-compare-neg-zero: 'error',
    no-dupe-else-if: 'error',
    no-irregular-whitespace: ['error', { skipTemplates: true }],
    array-callback-return: 'error',
    operator-linebreak: [2, 'before', { overrides: { '?': 'after' } }],
    block-scoped-var: 'error',
    eqeqeq: ['error', 'always'],
    max-len: ['error', { code: 90, tabWidth: 2 }],
    object-curly-newline: ['error', { consistent: true }],
    newline-per-chained-call: ['error', { ignoreChainWithDepth: 2 }],
    complexity: ['warn', { max: 3 }],
    treatUndefinedAsUnspecified: 'off',
    class-methods-use-this: 'off',
    react/jsx-indent: [2, 'tab', { indentLogicalExpressions: true }],
    react/jsx-curly-newline: 'off',
    react/jsx-filename-extension:
      [1, { extensions: ['.jsx', '.tsx', '.js', '.ts'] }],
    no-param-reassing: 'off',
    no-underscore-dangle: 'off',
    react-hooks/rules-of-hooks: 'error',
    react-hooks/exhaustive-deps: 'warn',
    import/no-extraneous-dependencies: ['off', { devDependencies: true }],
    import/extensions:
      ['error', 'ignorePackages', { ts: 'never', tsx: 'never' }],
    lines-around-comment:
      [
        'error',
        {
          'beforeBlockComment': true,
          'afterBlockComment': true,
          'beforeLineComment': true,
          'afterLineComment': true,
          'allowBlockStart': true,
          'allowBlockEnd': true,
          'allowObjectStart': true,
          'allowObjectEnd': true,
          'allowArrayStart': true,
          'allowArrayEnd': true,
        },
      ],
    no-confusing-arrow: ['error', { 'allowParens': false }],
    eslint-import-resolver-node: 'off',
    no-mixed-operators: 'error',
    no-unexpected-multiline: 'error',
    quotes: ['error', 'backtick'],
    import/no-unresolved: 'off',
    import/named: 1,
    import/namespace: 1,
    import/default: 1,
    import/export: 1,
    import/no-useless-path-segments: 1,
    semi: 'error',
    import-helpers/order-imports:
      ['warn', { newlinesBetween: 'always', groups: [
              'module',
              '/^react/',
              /^
              (assert
              |async_hooks
              |buffer
              |child_process
              |cluster
              |console
              |constants
              |crypto
              |dgram
              |dns
              |domain
              |events
              |fs
              |http
              |http2
              |https
              |inspector
              |module
              |net
              |os
              |path
              |perf_hooks
              |process
              |punycode
              |querystring
              |readline
              |repl
              |stream
              |string_decoder
              |timers
              |tls
              |trace_events
              |tty
              |url
              |util
              |v8
              |vm
              |zli
              )/,
            ], alphabetize: { order: 'asc', ignoreCase: true } }],
    jest/no-disabled-tests: 'warn',
    jest/no-focused-tests: 'error',
    jest/no-identical-title: 'error',
    jest/prefer-to-have-length: 'warn',
    jest/valid-expect: 'error',
    jsx-a11y/rule-name: 'off',
  }
settings:
  react:
    version: 'detect'
  import/extensions: ['.js', '.ts', '.jsx', '.tsx']
  import/resolver: { node: { extensions: ['.js', '.jsx'] } }
  jest:
    version: 'detect'
